Name: Ryan Sandoval
ID: 1529017
Course: CMPUT 274, FALL 2018

# Assignment 1: Huffman Compression #

## Included Files: ##
- util.py
    - Utility python file to decompress and compress other files


## Accessories: ##
    - None


## Wiring Instructions: ## 
    - None


## Running Instructions: ##

Import util.py first

To decompress, call:
    util.decompress(compressed, uncompressed)
        - compressed: The file stream compressed via huffman Compression
        - uncompressed: Output file stream to dump the decompressed file

To compress, call:    
    util.compress(tree, compressed, decompressed)
        - tree: The tree to pickle and insert into the compressed file
        - compressed: The file stream to dump the tree and the compressed file
        - uncompressed: The file stream to compress

## Notes and Assumptions ##

### Exceptions and Exception Handling ###
    - If an error occured, an exit value of -1 is returned
    - Setting GRACEFUL_EXIT to True will make the program print out the
        problem and then sys.exit(-1), rather than raising the error
    - Util.py requires that *.huf files have an EOF encoding at the end.
        If it does not, a Runtime Error error stating the lack of 
        an EOF encoding will be raised when bitreader
        reaches the end of file.
    - Several other error checking are also present:
        - Raise TypeError if bitreader returns non-binary


The following modules are required:
    - huffman
    - bitio
    - sys
    - pickle



Happy Grading!



